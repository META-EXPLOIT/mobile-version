package br.com.metaexploit.diversight.ui

import android.os.Bundle
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import androidx.appcompat.widget.AppCompatImageView
import androidx.appcompat.widget.AppCompatTextView
import androidx.fragment.app.Fragment
import androidx.navigation.fragment.findNavController
import androidx.navigation.fragment.navArgs
import androidx.recyclerview.widget.RecyclerView
import br.com.metaexploit.diversight.R
import br.com.metaexploit.diversight.databinding.FragmentSurveyBinding
import br.com.metaexploit.diversight.ui.adapter.SurveyAdapter
import com.google.android.material.button.MaterialButton

class SurveyFragment : Fragment() {

    private val args: SurveyFragmentArgs by navArgs()

    private lateinit var binding: FragmentSurveyBinding

    private val adapter by lazy {
        SurveyAdapter()
    }

    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View {
        binding = FragmentSurveyBinding.inflate(inflater, container, false)
        return binding.root
    }

    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
        super.onViewCreated(view, savedInstanceState)
        setViewsVisibility()

        binding.questionList.adapter = adapter

        binding.subtitle.text = when (args.pergunta.type) {
            "nps" -> "NPS"
            "adm" -> "Admissional"
            else -> "Demissional"
        }

        binding.btnBack.setOnClickListener {
            findNavController().popBackStack()
        }

        adapter.getSurvey(args.pergunta.questions)

        binding.btnSend.setOnClickListener {
            setViewsVisibility(false)
        }

        binding.btnHome.setOnClickListener {
            findNavController().popBackStack()
        }
    }

    private fun setViewsVisibility(b: Boolean = true) {
        if (b) {
            binding.icComplete.visibility = View.GONE
            binding.txtComplete.visibility = View.GONE
            binding.questionList.visibility = View.VISIBLE
            binding.btnHome.visibility = View.GONE
            binding.btnSend.visibility = View.VISIBLE
        } else {
            binding.icComplete.visibility = View.VISIBLE
            binding.txtComplete.visibility = View.VISIBLE
            binding.questionList.visibility = View.GONE
            binding.btnHome.visibility = View.VISIBLE
            binding.btnSend.visibility = View.GONE
        }
    }
}
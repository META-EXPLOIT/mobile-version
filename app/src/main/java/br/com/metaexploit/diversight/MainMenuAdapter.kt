package br.com.metaexploit.diversight

import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.RelativeLayout
import androidx.appcompat.widget.AppCompatImageView
import androidx.appcompat.widget.AppCompatTextView
import androidx.recyclerview.widget.RecyclerView

class MainMenuAdapter(private val filter: (type: Int) -> Unit): RecyclerView.Adapter<MainMenuAdapter.ViewHolder>() {

    private var menuList: List<ItemMainMenu> = emptyList()
    private lateinit var parentContext: ViewGroup

    inner class ViewHolder(itemView: View): RecyclerView.ViewHolder(itemView) {
        fun bind(item: ItemMainMenu, position: Int) {
            val imageView = itemView.findViewById<AppCompatImageView>(R.id.item_menu_image)
            imageView.background = item.icon
            val textView = itemView.findViewById<AppCompatTextView>(R.id.item_menu_text)
            textView.text = item.title

            if (position == 0) {
                val param: RelativeLayout.LayoutParams = RelativeLayout.LayoutParams(RelativeLayout.LayoutParams.WRAP_CONTENT,90)
                param.marginStart = 80
                param.marginEnd = 12

                itemView.layoutParams = param

            } else if (position == menuList.size - 1) {
                val param: RelativeLayout.LayoutParams = RelativeLayout.LayoutParams(RelativeLayout.LayoutParams.WRAP_CONTENT,90)
                param.marginStart = 12
                param.marginEnd = 80

                itemView.layoutParams = param
            }


            itemView.setOnClickListener {
                when (item.type) {
                    0 -> {
//                        itemView.setBackgroundResource(R.drawable.bc_item_menu_on_focus)
//                        textView.setTextColor(R.color.text_menu_item_on_focus)
//                        imageView.setBackgroundResource(R.drawable.ic_calendar_on_focus)
                        filter(0)
                    }
                    1 -> {
//                        itemView.setBackgroundResource(R.drawable.bc_item_menu_on_focus)
                        filter(1)
                    }
                    2 -> {
//                        itemView.setBackgroundResource(R.drawable.bc_item_menu_on_focus)
                        filter(2)
                    }
                    3 -> {
//                        itemView.setBackgroundResource(R.drawable.bc_item_menu_on_focus)
                        filter(3)
                    }
                    else -> {
//                        itemView.setBackgroundResource(R.drawable.bc_item_menu_on_focus)
                        filter(4)
                    }
                }
            }
        }
    }

    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {
        val view = LayoutInflater.from(parent.context).inflate(R.layout.item_main_menu, parent, false)
        parentContext = parent
        return ViewHolder(view)
    }

    override fun onBindViewHolder(holder: ViewHolder, position: Int) {
        holder.bind(menuList[position], position)
    }

    override fun getItemCount(): Int {
        return menuList.size
    }

    fun getMenuList(list: List<ItemMainMenu>) {
        menuList = list
        notifyDataSetChanged()
    }
}
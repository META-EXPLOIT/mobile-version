package br.com.metaexploit.diversight

import android.os.Bundle
import android.view.View
import android.widget.ArrayAdapter
import android.widget.AutoCompleteTextView
import android.widget.LinearLayout
import androidx.appcompat.widget.AppCompatCheckBox
import androidx.appcompat.widget.AppCompatImageView
import androidx.fragment.app.Fragment
import androidx.navigation.fragment.findNavController
import com.google.android.material.textfield.TextInputLayout

class UpdateUserFragment : Fragment(R.layout.fragment_update_user) {

    private lateinit var imageButtonBack: AppCompatImageView

    private lateinit var inputName: TextInputLayout
    private lateinit var inputNameValue: String

    private lateinit var inputColor: TextInputLayout
    private lateinit var autoCompleteColor: AutoCompleteTextView
    private lateinit var selectedColor: String
    private val listColor = listOf(
        "Branca",
        "Parda", "Preta",
        "Amarela",
        "Indígena"
    )

    private lateinit var inputSex: TextInputLayout
    private lateinit var autoCompleteSex: AutoCompleteTextView
    private lateinit var selectedSex: String
    private val listSex = listOf(
        "Cisgênero homem",
        "Cisgênero mulher",
        "Transgênero homem",
        "Transgênero mulher",
        "Agênero",
        "Não binário"
    )

    private lateinit var inputGender: TextInputLayout
    private lateinit var autoCompleteGender: AutoCompleteTextView
    private lateinit var selectedGender: String
    private val listGender = listOf(
        "Heterossexual",
        "Homossexual",
        "Bissexual",
        "Panssexual",
        "Assexual"
    )

    private lateinit var inputPcd: TextInputLayout
    private lateinit var autoCompletePcd: AutoCompleteTextView
    private lateinit var selectedPcd: String
    private val listPcd = listOf(
        "Sim",
        "Não"
    )

    private lateinit var optPcd: LinearLayout

    private lateinit var pcdOpt1: AppCompatCheckBox
    private lateinit var pcdOpt2: AppCompatCheckBox
    private lateinit var pcdOpt3: AppCompatCheckBox
    private lateinit var pcdOpt4: AppCompatCheckBox
    private lateinit var pcdOpt5: AppCompatCheckBox
    private lateinit var pcdOpt6: AppCompatCheckBox

    private lateinit var inputDate: TextInputLayout
    private lateinit var inputDateValue: String

    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
        super.onViewCreated(view, savedInstanceState)

        // Back button
        imageButtonBack = view.findViewById(R.id.fg_update_user_back)
        imageButtonBack.setOnClickListener {
            findNavController().popBackStack()
        }

        // Name
        inputName = view.findViewById(R.id.fg_update_user_edt_email)

        // Race
        inputColor = view.findViewById(R.id.fg_update_user_edt_enterprise)
        autoCompleteColor = view.findViewById(R.id.fg_update_user_edt_color_autocomplete)
        setAdapter(inputColor, listColor)
        autoCompleteColor.setOnItemClickListener { parent, view, position, id ->
            selectedColor = listColor[position]
        }

        // Sex
        inputSex = view.findViewById(R.id.fg_update_user_edt_sex)
        autoCompleteSex = view.findViewById(R.id.fg_update_user_edt_sex_autocomplete)
        setAdapter(inputSex, listSex)
        autoCompleteSex.setOnItemClickListener { parent, view, position, id ->
            selectedSex = listSex[position]
        }

        // Gender
        inputGender = view.findViewById(R.id.fg_update_user_edt_gender)
        autoCompleteGender = view.findViewById(R.id.fg_update_user_edt_gender_autocomplete)
        setAdapter(inputGender, listGender)
        autoCompleteGender.setOnItemClickListener { parent, view, position, id ->
            selectedGender = listGender[position]
        }

        // PCD
        inputPcd = view.findViewById(R.id.fg_update_user_edt_pcd)
        autoCompletePcd = view.findViewById(R.id.fg_update_user_edt_pcd_autocomplete)
        optPcd = view.findViewById(R.id.fg_update_user_pcd_opt)
        pcdOpt1 = view.findViewById(R.id.fg_update_user_pcd_opt_1)
        pcdOpt2 = view.findViewById(R.id.fg_update_user_pcd_opt_2)
        pcdOpt3 = view.findViewById(R.id.fg_update_user_pcd_opt_3)
        pcdOpt4 = view.findViewById(R.id.fg_update_user_pcd_opt_4)
        pcdOpt5 = view.findViewById(R.id.fg_update_user_pcd_opt_5)
        pcdOpt6 = view.findViewById(R.id.fg_update_user_pcd_opt_6)
        setAdapter(inputPcd, listPcd)
        autoCompletePcd.setOnItemClickListener { parent, view, position, id ->
            selectedPcd = listPcd[position]

            if (position == 0) {
                optPcd.visibility = View.VISIBLE
            } else {
                pcdOpt1.isChecked = false
                pcdOpt2.isChecked = false
                pcdOpt3.isChecked = false
                pcdOpt4.isChecked = false
                pcdOpt5.isChecked = false
                pcdOpt6.isChecked = false
                optPcd.visibility = View.GONE
            }
        }

        // Birthday
        inputDate = view.findViewById(R.id.fg_update_user_edt_birthday)
    }

    private fun setAdapter(inputLayout: TextInputLayout, items: List<String>) {
        val adapter = ArrayAdapter(requireContext(), R.layout.list_item, items)
        (inputLayout.editText as? AutoCompleteTextView)?.setAdapter(adapter)
    }
}
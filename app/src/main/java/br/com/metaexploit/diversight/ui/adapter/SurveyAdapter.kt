package br.com.metaexploit.diversight.ui.adapter

import android.util.Log
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.RadioButton
import android.widget.RadioGroup
import androidx.appcompat.widget.AppCompatTextView
import androidx.core.content.ContextCompat
import androidx.lifecycle.ViewModelProvider
import androidx.recyclerview.widget.RecyclerView
import br.com.metaexploit.diversight.R
import br.com.metaexploit.diversight.presenter.login.Factory
import br.com.metaexploit.diversight.presenter.login.LoginViewModel
import br.com.metaexploit.diversight.presenter.survey.SurveyViewModel
import br.com.metaexploit.diversight.remote.FormQuestion

class SurveyAdapter: RecyclerView.Adapter<SurveyAdapter.QuestionViewHolder>() {

    private var listQuestion: List<FormQuestion> = emptyList()
    private lateinit var viewModel: SurveyViewModel

    inner class QuestionViewHolder(itemView: View): RecyclerView.ViewHolder(itemView) {
        fun bind(question: FormQuestion, position: Int) {



            itemView.findViewById<AppCompatTextView>(R.id.item_question_counter).text = "${position+1} de ${listQuestion.size}"
            itemView.findViewById<AppCompatTextView>(R.id.item_question_enunciated).text = question.enunciated

            val listQuestionOption = listQuestion[position].listQuestionOption
            val radioGroup = itemView.findViewById<RadioGroup>(R.id.item_question_radio_group)
            var counter = 0
            radioGroup.removeAllViews()
            while (counter < listQuestionOption.size) {
                val radioButton = RadioButton(itemView.context)
                radioButton.text = listQuestionOption[counter].text
                radioButton.textSize = 14.toFloat()
                radioButton.buttonTintList = ContextCompat.getColorStateList(radioButton.context, R.color.radio_button)
                radioGroup.addView(radioButton)
                counter += 1
            }

            var answer = 0
            radioGroup.setOnCheckedChangeListener { _, checkedId ->
                val radioBtn = radioGroup.findViewById<RadioButton>(checkedId)
                val index = radioGroup.indexOfChild(radioBtn)
                answer = index + 1
            }

        }
    }

    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): QuestionViewHolder {
        val view = LayoutInflater.from(parent.context).inflate(R.layout.item_question, parent, false)
        return QuestionViewHolder(view)
    }

    override fun onBindViewHolder(holder: QuestionViewHolder, position: Int) {
        holder.bind(listQuestion[position], position)
    }

    override fun getItemCount(): Int {
        return listQuestion.size
    }

    fun getSurvey(list: List<FormQuestion>) {
        listQuestion = list
        notifyDataSetChanged()
    }
}
package br.com.metaexploit.diversight.presenter.login

import android.util.Log
import androidx.lifecycle.LiveData
import androidx.lifecycle.MutableLiveData
import androidx.lifecycle.ViewModel
import br.com.metaexploit.diversight.remote.DiversightService
import br.com.metaexploit.diversight.remote.LoginRequest
import br.com.metaexploit.diversight.remote.User
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.launch
import retrofit2.Response

class LoginViewModel(
    private val service: DiversightService
) : ViewModel() {

    private val _userLiveData = MutableLiveData<User>()
    val userLiveData: LiveData<User> = _userLiveData

    fun login(email: String, password: String) {

        CoroutineScope(Dispatchers.IO).launch {
            val response = service.login(
                LoginRequest(
                    email = email,
                    password = password
                )
            )
            CoroutineScope(Dispatchers.Main).launch {
                handleLogin(response)
            }
        }
    }

    private fun handleLogin(response: Response<User>) {
        if (response.isSuccessful) {
            _userLiveData.value = response.body()
        }
    }


}
package br.com.metaexploit.diversight.ui

import android.content.Context
import android.os.Bundle
import android.view.LayoutInflater
import androidx.fragment.app.Fragment
import android.view.View
import android.view.ViewGroup
import androidx.core.content.res.ResourcesCompat
import androidx.navigation.fragment.NavHostFragment
import androidx.navigation.fragment.findNavController
import br.com.metaexploit.diversight.R
import br.com.metaexploit.diversight.databinding.FragmentOnBoardingBinding

class OnBoardFragment : Fragment() {

    // Set viewBinding
    private lateinit var binding: FragmentOnBoardingBinding

    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View {
        binding = FragmentOnBoardingBinding.inflate(inflater, container, false)
        return binding.root
    }

    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
        super.onViewCreated(view, savedInstanceState)

        // Set status bar color
        activity?.window?.statusBarColor = ResourcesCompat.getColor(resources, R.color.white, null)

        // OnBoard navigation
        val nav = (childFragmentManager.findFragmentById(R.id.fgContainer) as NavHostFragment).navController
        var currentScreen = 1

        binding.btnNext.setOnClickListener {
            when (currentScreen) {
                1 -> {
                    nav.navigate(R.id.onBoardingPart2Fragment)
                    binding.btnBack.visibility = View.VISIBLE

                    binding.dot1.setBackgroundResource(R.drawable.ic_on_boarding_dot_off)
                    binding.dot2.setBackgroundResource(R.drawable.ic_on_boarding_dot_on)
                    binding.dot3.setBackgroundResource(R.drawable.ic_on_boarding_dot_off)

                    currentScreen += 1
                }
                2 -> {
                    nav.navigate(R.id.onBoardingPart3Fragment)

                    binding.dot1.setBackgroundResource(R.drawable.ic_on_boarding_dot_off)
                    binding.dot2.setBackgroundResource(R.drawable.ic_on_boarding_dot_off)
                    binding.dot3.setBackgroundResource(R.drawable.ic_on_boarding_dot_on)

                    binding.btnNext.text = getText(R.string.final_board)

                    currentScreen += 1
                }
                3 -> {
                    setSharedPreferences()
                    navigateToLogin()
                }
            }
        }
        binding.btnBack.setOnClickListener {
            if (currentScreen == 2) {
                nav.navigate(R.id.onBoardingPart1Fragment)
                binding.btnBack.visibility = View.INVISIBLE

                binding.dot1.setBackgroundResource(R.drawable.ic_on_boarding_dot_on)
                binding.dot2.setBackgroundResource(R.drawable.ic_on_boarding_dot_off)
                binding.dot3.setBackgroundResource(R.drawable.ic_on_boarding_dot_off)

                currentScreen -= 1
            } else if (currentScreen == 3) {
                binding.btnNext.text = getText(R.string.init_board)

                nav.navigate(R.id.onBoardingPart2Fragment)
                binding.dot1.setBackgroundResource(R.drawable.ic_on_boarding_dot_off)
                binding.dot2.setBackgroundResource(R.drawable.ic_on_boarding_dot_on)
                binding.dot3.setBackgroundResource(R.drawable.ic_on_boarding_dot_off)
                currentScreen -= 1

            }
        }
        binding.btnSkip.setOnClickListener {
            setSharedPreferences()
            navigateToLogin()
        }
    }

    // Navigate to login
    private fun navigateToLogin() {
        findNavController().navigate(
            OnBoardFragmentDirections.actionOnBoardingFragmentToLoginFragment()
        )
    }

    // Save OnBoard view status
    private fun setSharedPreferences() {
        val sharedPref = activity?.getPreferences(Context.MODE_PRIVATE) ?: return
        with (sharedPref.edit()) {
            putBoolean(getString(R.string.key_boarding_visible), true)
            commit()
        }
    }
}
package br.com.metaexploit.diversight.ui

import android.os.Bundle
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.ArrayAdapter
import android.widget.AutoCompleteTextView
import android.widget.LinearLayout
import android.widget.Toast
import androidx.appcompat.widget.AppCompatCheckBox
import androidx.appcompat.widget.AppCompatImageView
import androidx.databinding.DataBindingUtil
import androidx.fragment.app.Fragment
import androidx.navigation.fragment.findNavController
import br.com.metaexploit.diversight.R
import br.com.metaexploit.diversight.databinding.FragmentUpdateUserBinding
import com.google.android.material.button.MaterialButton
import com.google.android.material.textfield.TextInputLayout

class UpdateUserFragment : Fragment() {

    private lateinit var binding: FragmentUpdateUserBinding

    private lateinit var selectedColor: String
    private val listColor = listOf(
        "Branca",
        "Parda",
        "Preta",
        "Amarela",
        "Indígena"
    )

    private lateinit var selectedSex: String
    private val listSex = listOf(
        "Homem cisgênero",
        "Mulher cisgênero",
        "Homem transgênero",
        "Mulher transgênero",
        "Agênero",
        "Não binário"
    )

    private lateinit var selectedGender: String
    private val listGender = listOf(
        "Heterossexual",
        "Homossexual",
        "Bissexual",
        "Panssexual",
        "Assexual"
    )

    private lateinit var selectedPcd: String
    private val listPcd = listOf(
        "Sim",
        "Não"
    )

    override fun onCreateView(
        inflater: LayoutInflater,
        container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View {
        binding = DataBindingUtil.inflate(inflater, R.layout.fragment_update_user, container, false)
        return binding.root
    }

    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
        super.onViewCreated(view, savedInstanceState)

        // Back button
        binding.btnBack.setOnClickListener {
            findNavController().popBackStack()
        }

        // Skin
        setAdapter(binding.edtSkin, listColor)
        binding.acSkin.setOnItemClickListener { _, _, position, _ ->
            selectedColor = listColor[position]
        }

        // Sex
        setAdapter(binding.edtSex, listSex)
        binding.acSex.setOnItemClickListener { _, _, position, _ ->
            selectedSex = listSex[position]
        }

        // Gender
        setAdapter(binding.edtGender, listGender)
        binding.acGender.setOnItemClickListener { _, _, position, _ ->
            selectedGender = listGender[position]
        }

        // PCD
        setAdapter(binding.edtPcd, listPcd)
        binding.acPcd.setOnItemClickListener { _, _, position, _ ->
            selectedPcd = listPcd[position]

            if (position == 0) {
                binding.containerPcdOptions.visibility = View.VISIBLE
            } else {
                binding.ckbOption1.isChecked = false
                binding.ckbOption2.isChecked = false
                binding.ckbOption3.isChecked = false
                binding.ckbOption4.isChecked = false
                binding.ckbOption5.isChecked = false
                binding.ckbOption6.isChecked = false
                binding.containerPcdOptions.visibility = View.GONE
            }
        }

        binding.btnDone.setOnClickListener {
            Toast.makeText(context, "Dados atualizados!", Toast.LENGTH_SHORT).show()
            findNavController().popBackStack()
        }
    }

    private fun setAdapter(inputLayout: TextInputLayout, items: List<String>) {
        val adapter = ArrayAdapter(requireContext(), R.layout.list_item, items)
        (inputLayout.editText as? AutoCompleteTextView)?.setAdapter(adapter)
    }
}
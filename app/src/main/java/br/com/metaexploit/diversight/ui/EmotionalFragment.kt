package br.com.metaexploit.diversight.ui

import android.os.Bundle
import android.view.View
import android.widget.LinearLayout
import android.widget.Toast
import androidx.appcompat.widget.AppCompatImageView
import androidx.appcompat.widget.AppCompatTextView
import androidx.appcompat.widget.LinearLayoutCompat
import androidx.fragment.app.Fragment
import androidx.navigation.fragment.navArgs
import br.com.metaexploit.diversight.R
import com.google.android.material.button.MaterialButton
import java.text.SimpleDateFormat
import java.util.*

class EmotionalFragment : Fragment(R.layout.fragment_emotional) {

    private val args: EmotionalFragmentArgs by navArgs()

    private lateinit var subtitle: AppCompatTextView
    private lateinit var dateView: AppCompatTextView
    private lateinit var enunciated: AppCompatTextView

    private lateinit var emoticonVerySad: LinearLayoutCompat
    private lateinit var emoticonSad: LinearLayoutCompat
    private lateinit var emoticonNeutral: LinearLayoutCompat
    private lateinit var emoticonHappy: LinearLayoutCompat
    private lateinit var emoticonVeryHappy: LinearLayoutCompat

    private lateinit var emoticonVerySadImage: AppCompatImageView
    private lateinit var emoticonSadImage: AppCompatImageView
    private lateinit var emoticonNeutralImage: AppCompatImageView
    private lateinit var emoticonHappyImage: AppCompatImageView
    private lateinit var emoticonVeryHappyImage: AppCompatImageView

    private lateinit var button: MaterialButton

    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
        super.onViewCreated(view, savedInstanceState)

        // Status
        var statusEmoticonVerySad = false
        var statusEmoticonSad = false
        var statusEmoticonNeutral = false
        var statusEmoticonHappy = false
        var statusEmoticonVeryHappy = false

        // Selected emoticon
        var selectedEmotion = 0

        // Text
        subtitle = view.findViewById(R.id.fg_emotional_subtitle)
        dateView = view.findViewById(R.id.fg_emotional_date)
        enunciated = view.findViewById(R.id.fg_emotional_enunciated)

        // Button
        emoticonVerySad = view.findViewById(R.id.fg_emotional_emoticon_very_sad)
        emoticonSad = view.findViewById(R.id.fg_emotional_emoticon_sad)
        emoticonNeutral = view.findViewById(R.id.fg_emotional_emoticon_neutral)
        emoticonHappy = view.findViewById(R.id.fg_emotional_emoticon_happy)
        emoticonVeryHappy = view.findViewById(R.id.fg_emotional_emoticon_very_happy)

        // Icon
        emoticonVerySadImage = view.findViewById(R.id.fg_emotional_emoticon_very_sad_image)
        emoticonSadImage = view.findViewById(R.id.fg_emotional_emoticon_sad_image)
        emoticonNeutralImage = view.findViewById(R.id.fg_emotional_emoticon_neutral_image)
        emoticonHappyImage = view.findViewById(R.id.fg_emotional_emoticon_happy_image)
        emoticonVeryHappyImage = view.findViewById(R.id.fg_emotional_emoticon_very_happy_image)

        button = view.findViewById(R.id.fg_emotional_button)

        when(args.type) {
            // 0 - Daily
            0 -> {
                subtitle.text = "Humor diário"
                enunciated.text = "Como você está se sentindo hoje?"
            }
            // else - Weekly
            else -> {
                subtitle.text = "Humor semanal"
                enunciated.text = "Como foi o trabalho essa semana?"
            }
        }

        // Data
        val date = Calendar.getInstance().time
        val dateTimeFormat = SimpleDateFormat("dd/MM/yyyy", Locale.getDefault())

        dateView.text = dateTimeFormat.format(date)

        // Very sad emoticon - 1
        emoticonVerySad.setOnClickListener {
            if (statusEmoticonVerySad) {
                selectedEmotion = 0

                statusEmoticonVerySad = false
                emoticonVerySadImage.setBackgroundResource(R.drawable.ic_emoticon_very_sad_off)
            } else {
                selectedEmotion = 1

                statusEmoticonVerySad = true
                emoticonVerySadImage.setBackgroundResource(R.drawable.ic_emoticon_very_sad_on)
                statusEmoticonSad = false
                emoticonSadImage.setBackgroundResource(R.drawable.ic_emoticon_sad_off)
                statusEmoticonNeutral = false
                emoticonNeutralImage.setBackgroundResource(R.drawable.ic_emoticon_neutral_off)
                statusEmoticonHappy = false
                emoticonHappyImage.setBackgroundResource(R.drawable.ic_emoticon_happy_off)
                statusEmoticonVeryHappy = false
                emoticonVeryHappyImage.setBackgroundResource(R.drawable.ic_emoticon_very_happy_off)
            }
        }

        // Sad emoticon - 2
        emoticonSad.setOnClickListener {
            if (statusEmoticonSad) {
                selectedEmotion = 0

                statusEmoticonSad = false
                emoticonSadImage.setBackgroundResource(R.drawable.ic_emoticon_sad_off)
            } else {
                selectedEmotion = 2

                statusEmoticonVerySad = false
                emoticonVerySadImage.setBackgroundResource(R.drawable.ic_emoticon_very_sad_off)
                statusEmoticonSad = true
                emoticonSadImage.setBackgroundResource(R.drawable.ic_emoticon_sad_on)
                statusEmoticonNeutral = false
                emoticonNeutralImage.setBackgroundResource(R.drawable.ic_emoticon_neutral_off)
                statusEmoticonHappy = false
                emoticonHappyImage.setBackgroundResource(R.drawable.ic_emoticon_happy_off)
                statusEmoticonVeryHappy = false
                emoticonVeryHappyImage.setBackgroundResource(R.drawable.ic_emoticon_very_happy_off)
            }
        }

        // Neutral emoticon - 3
        emoticonNeutral.setOnClickListener {
            if (statusEmoticonNeutral) {
                selectedEmotion = 0

                statusEmoticonNeutral = false
                emoticonNeutralImage.setBackgroundResource(R.drawable.ic_emoticon_neutral_off)
            } else {
                selectedEmotion = 3

                statusEmoticonVerySad = false
                emoticonVerySadImage.setBackgroundResource(R.drawable.ic_emoticon_very_sad_off)
                statusEmoticonSad = false
                emoticonSadImage.setBackgroundResource(R.drawable.ic_emoticon_sad_off)
                statusEmoticonNeutral = true
                emoticonNeutralImage.setBackgroundResource(R.drawable.ic_emoticon_neutral_on)
                statusEmoticonHappy = false
                emoticonHappyImage.setBackgroundResource(R.drawable.ic_emoticon_happy_off)
                statusEmoticonVeryHappy = false
                emoticonVeryHappyImage.setBackgroundResource(R.drawable.ic_emoticon_very_happy_off)
            }
        }

        // Happy emoticon - 4
        emoticonHappy.setOnClickListener {
            if (statusEmoticonHappy) {
                selectedEmotion = 0

                statusEmoticonHappy = false
                emoticonHappyImage.setBackgroundResource(R.drawable.ic_emoticon_happy_off)
            } else {
                selectedEmotion = 4

                statusEmoticonVerySad = false
                emoticonVerySadImage.setBackgroundResource(R.drawable.ic_emoticon_very_sad_off)
                statusEmoticonSad = false
                emoticonSadImage.setBackgroundResource(R.drawable.ic_emoticon_sad_off)
                statusEmoticonNeutral = false
                emoticonNeutralImage.setBackgroundResource(R.drawable.ic_emoticon_neutral_off)
                statusEmoticonHappy = true
                emoticonHappyImage.setBackgroundResource(R.drawable.ic_emoticon_happy_on)
                statusEmoticonVeryHappy = false
                emoticonVeryHappyImage.setBackgroundResource(R.drawable.ic_emoticon_very_happy_off)
            }
        }

        // Very happy emoticon - 5
        emoticonVeryHappy.setOnClickListener {
            if (statusEmoticonVeryHappy) {
                selectedEmotion = 0

                statusEmoticonVeryHappy = false
                emoticonVeryHappyImage.setBackgroundResource(R.drawable.ic_emoticon_very_happy_off)
            } else {
                selectedEmotion = 5

                statusEmoticonVerySad = false
                emoticonVerySadImage.setBackgroundResource(R.drawable.ic_emoticon_very_sad_off)
                statusEmoticonSad = false
                emoticonSadImage.setBackgroundResource(R.drawable.ic_emoticon_sad_off)
                statusEmoticonNeutral = false
                emoticonNeutralImage.setBackgroundResource(R.drawable.ic_emoticon_neutral_off)
                statusEmoticonHappy = false
                emoticonHappyImage.setBackgroundResource(R.drawable.ic_emoticon_happy_off)
                statusEmoticonVeryHappy = true
                emoticonVeryHappyImage.setBackgroundResource(R.drawable.ic_emoticon_very_happy_on)
            }
        }

        // Button send
        button.setOnClickListener {
            when(args.type) {
                // 0 - Daily
                0 -> sendEmotionalDaily(selectedEmotion)
                // else - Weekly
                else -> sendEmotionalWeekly(selectedEmotion)
            }
        }
    }

    private fun sendEmotionalDaily(selection: Int) {
        val text = if (selection == 0) {
            "Selecione um emoticon"
        } else {
            "$selection"
        }

        val toast: Toast = Toast.makeText(context, text, Toast.LENGTH_SHORT)
        toast.show()
    }

    private fun sendEmotionalWeekly(selection: Int) {

    }

}
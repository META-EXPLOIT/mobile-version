package br.com.metaexploit.diversight.ui

import android.os.Bundle
import android.view.View
import android.widget.Toast
import androidx.appcompat.widget.AppCompatButton
import androidx.appcompat.widget.AppCompatImageView
import androidx.appcompat.widget.AppCompatTextView
import androidx.appcompat.widget.LinearLayoutCompat
import androidx.constraintlayout.widget.ConstraintLayout
import androidx.core.content.res.ResourcesCompat
import androidx.fragment.app.Fragment
import androidx.navigation.fragment.findNavController
import androidx.navigation.fragment.navArgs
import br.com.metaexploit.diversight.R
import com.google.android.material.button.MaterialButton
import java.text.SimpleDateFormat
import java.util.*

class EmotionalFragment : Fragment(R.layout.fragment_emotional) {

    private val args: EmotionalFragmentArgs by navArgs()

    private lateinit var subtitle: AppCompatTextView
    private lateinit var dateView: AppCompatTextView
    private lateinit var enunciated: AppCompatTextView

    private lateinit var backButton: AppCompatImageView

    private lateinit var horizontalLine: View

    private lateinit var emoticonContainer: ConstraintLayout

    private lateinit var emoticonVerySad: LinearLayoutCompat
    private lateinit var emoticonSad: LinearLayoutCompat
    private lateinit var emoticonNeutral: LinearLayoutCompat
    private lateinit var emoticonHappy: LinearLayoutCompat
    private lateinit var emoticonVeryHappy: LinearLayoutCompat

    private lateinit var emoticonVerySadImage: AppCompatImageView
    private lateinit var emoticonSadImage: AppCompatImageView
    private lateinit var emoticonNeutralImage: AppCompatImageView
    private lateinit var emoticonHappyImage: AppCompatImageView
    private lateinit var emoticonVeryHappyImage: AppCompatImageView

    private lateinit var checklist: LinearLayoutCompat

    private lateinit var imageComplete: AppCompatImageView
    private lateinit var textComplete: AppCompatTextView

    private lateinit var buttonSend: MaterialButton
    private lateinit var buttonHome: MaterialButton

//    private lateinit var clGoodLine1Option1: AppCompatButton
//    private lateinit var clGoodLine1Option2: AppCompatButton
//
//    private lateinit var clGoodLine2Option1: AppCompatButton
//
//    private lateinit var clGoodLine3Option1: AppCompatButton
//    private lateinit var clGoodLine3Option2: AppCompatButton
//
//    private lateinit var clGoodLine4Option1: AppCompatButton
//    private lateinit var clGoodLine4Option2: AppCompatButton
//
//    private lateinit var clGoodLine5Option1: AppCompatButton
//    private lateinit var clGoodLine5Option2: AppCompatButton
//    private lateinit var clGoodLine5Option3: AppCompatButton
//
//    private lateinit var clGoodLine6Option1: AppCompatButton
//    private lateinit var clGoodLine6Option2: AppCompatButton
//
//    private lateinit var clGoodLine7Option1: AppCompatButton
//    private lateinit var clGoodLine7Option2: AppCompatButton
//
//    private lateinit var clBadLine1Option1: AppCompatButton
//    private lateinit var clBadLine1Option2: AppCompatButton
//
//    private lateinit var clBadLine2Option1: AppCompatButton
//    private lateinit var clBadLine2Option2: AppCompatButton
//
//    private lateinit var clBadLine3Option1: AppCompatButton
//
//    private lateinit var clBadLine4Option1: AppCompatButton
//
//    private lateinit var clBadLine5Option1: AppCompatButton
//    private lateinit var clBadLine5Option2: AppCompatButton
//
//    private lateinit var clBadLine6Option1: AppCompatButton
//    private lateinit var clBadLine6Option2: AppCompatButton
//
//    private lateinit var clBadLine7Option1: AppCompatButton
//
//    private lateinit var clBadLine8Option1: AppCompatButton
//    private lateinit var clBadLine8Option2: AppCompatButton
//
//    private lateinit var clBadLine9Option2: AppCompatButton



    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
        super.onViewCreated(view, savedInstanceState)

        // Status
        var statusEmoticonVerySad = false
        var statusEmoticonSad = false
        var statusEmoticonNeutral = false
        var statusEmoticonHappy = false
        var statusEmoticonVeryHappy = false

        // Selected emoticon
        var selectedEmotion = 0

        // Back button
        backButton = view.findViewById(R.id.fg_emotional_back)

        // Text
        subtitle = view.findViewById(R.id.fg_emotional_subtitle)
        dateView = view.findViewById(R.id.fg_emotional_date)
        enunciated = view.findViewById(R.id.fg_emotional_enunciated)

        // Horizontal line
        horizontalLine = view.findViewById(R.id.fg_emotional_divider)

        // Emoticon container
        emoticonContainer = view.findViewById(R.id.fg_emotional_emoticon_container)

        // Button
        emoticonVerySad = view.findViewById(R.id.fg_emotional_emoticon_very_sad)
        emoticonSad = view.findViewById(R.id.fg_emotional_emoticon_sad)
        emoticonNeutral = view.findViewById(R.id.fg_emotional_emoticon_neutral)
        emoticonHappy = view.findViewById(R.id.fg_emotional_emoticon_happy)
        emoticonVeryHappy = view.findViewById(R.id.fg_emotional_emoticon_very_happy)

        // Icon
        emoticonVerySadImage = view.findViewById(R.id.fg_emotional_emoticon_very_sad_image)
        emoticonSadImage = view.findViewById(R.id.fg_emotional_emoticon_sad_image)
        emoticonNeutralImage = view.findViewById(R.id.fg_emotional_emoticon_neutral_image)
        emoticonHappyImage = view.findViewById(R.id.fg_emotional_emoticon_happy_image)
        emoticonVeryHappyImage = view.findViewById(R.id.fg_emotional_emoticon_very_happy_image)

        // Checklist
        checklist = view.findViewById(R.id.fg_emotional_checklist)

        // Complete status
        imageComplete = view.findViewById(R.id.fg_emotional_image_complete)
        textComplete = view.findViewById(R.id.fg_emotional_text_complete)

        // Button send
        buttonSend = view.findViewById(R.id.fg_emotional_button_send)

        // Button home
        buttonHome = view.findViewById(R.id.fg_emotional_button_home)

        when (args.form.type) {
            // 0 - Daily
            "diaria" -> {
                subtitle.text = "Humor diário"
                enunciated.text = "Como você está se sentindo hoje?"
                checklist.visibility = View.GONE
            }
            // else - Weekly
            else -> {
                subtitle.text = "Humor semanal"
                enunciated.text = "Como foi o trabalho essa semana?"
//                checklist.visibility = View.VISIBLE
            }
        }

        // Data
        val date = Calendar.getInstance().time
        val dateTimeFormat = SimpleDateFormat("dd/MM/yyyy", Locale.getDefault())

        dateView.text = dateTimeFormat.format(date)

        // Very sad emoticon - 1
        emoticonVerySad.setOnClickListener {
            if (statusEmoticonVerySad) {
                selectedEmotion = 0

                statusEmoticonVerySad = false
                emoticonVerySadImage.setBackgroundResource(R.drawable.ic_emoticon_very_sad_off)
            } else {
                selectedEmotion = 1

                statusEmoticonVerySad = true
                emoticonVerySadImage.setBackgroundResource(R.drawable.ic_emoticon_very_sad_on)
                statusEmoticonSad = false
                emoticonSadImage.setBackgroundResource(R.drawable.ic_emoticon_sad_off)
                statusEmoticonNeutral = false
                emoticonNeutralImage.setBackgroundResource(R.drawable.ic_emoticon_neutral_off)
                statusEmoticonHappy = false
                emoticonHappyImage.setBackgroundResource(R.drawable.ic_emoticon_happy_off)
                statusEmoticonVeryHappy = false
                emoticonVeryHappyImage.setBackgroundResource(R.drawable.ic_emoticon_very_happy_off)
            }
        }

        // Sad emoticon - 2
        emoticonSad.setOnClickListener {
            if (statusEmoticonSad) {
                selectedEmotion = 0

                statusEmoticonSad = false
                emoticonSadImage.setBackgroundResource(R.drawable.ic_emoticon_sad_off)
            } else {
                selectedEmotion = 2

                statusEmoticonVerySad = false
                emoticonVerySadImage.setBackgroundResource(R.drawable.ic_emoticon_very_sad_off)
                statusEmoticonSad = true
                emoticonSadImage.setBackgroundResource(R.drawable.ic_emoticon_sad_on)
                statusEmoticonNeutral = false
                emoticonNeutralImage.setBackgroundResource(R.drawable.ic_emoticon_neutral_off)
                statusEmoticonHappy = false
                emoticonHappyImage.setBackgroundResource(R.drawable.ic_emoticon_happy_off)
                statusEmoticonVeryHappy = false
                emoticonVeryHappyImage.setBackgroundResource(R.drawable.ic_emoticon_very_happy_off)
            }
        }

        // Neutral emoticon - 3
        emoticonNeutral.setOnClickListener {
            if (statusEmoticonNeutral) {
                selectedEmotion = 0

                statusEmoticonNeutral = false
                emoticonNeutralImage.setBackgroundResource(R.drawable.ic_emoticon_neutral_off)
            } else {
                selectedEmotion = 3

                statusEmoticonVerySad = false
                emoticonVerySadImage.setBackgroundResource(R.drawable.ic_emoticon_very_sad_off)
                statusEmoticonSad = false
                emoticonSadImage.setBackgroundResource(R.drawable.ic_emoticon_sad_off)
                statusEmoticonNeutral = true
                emoticonNeutralImage.setBackgroundResource(R.drawable.ic_emoticon_neutral_on)
                statusEmoticonHappy = false
                emoticonHappyImage.setBackgroundResource(R.drawable.ic_emoticon_happy_off)
                statusEmoticonVeryHappy = false
                emoticonVeryHappyImage.setBackgroundResource(R.drawable.ic_emoticon_very_happy_off)
            }
        }

        // Happy emoticon - 4
        emoticonHappy.setOnClickListener {
            if (statusEmoticonHappy) {
                selectedEmotion = 0

                statusEmoticonHappy = false
                emoticonHappyImage.setBackgroundResource(R.drawable.ic_emoticon_happy_off)
            } else {
                selectedEmotion = 4

                statusEmoticonVerySad = false
                emoticonVerySadImage.setBackgroundResource(R.drawable.ic_emoticon_very_sad_off)
                statusEmoticonSad = false
                emoticonSadImage.setBackgroundResource(R.drawable.ic_emoticon_sad_off)
                statusEmoticonNeutral = false
                emoticonNeutralImage.setBackgroundResource(R.drawable.ic_emoticon_neutral_off)
                statusEmoticonHappy = true
                emoticonHappyImage.setBackgroundResource(R.drawable.ic_emoticon_happy_on)
                statusEmoticonVeryHappy = false
                emoticonVeryHappyImage.setBackgroundResource(R.drawable.ic_emoticon_very_happy_off)
            }
        }

        // Very happy emoticon - 5
        emoticonVeryHappy.setOnClickListener {
            if (statusEmoticonVeryHappy) {
                selectedEmotion = 0

                statusEmoticonVeryHappy = false
                emoticonVeryHappyImage.setBackgroundResource(R.drawable.ic_emoticon_very_happy_off)
            } else {
                selectedEmotion = 5

                statusEmoticonVerySad = false
                emoticonVerySadImage.setBackgroundResource(R.drawable.ic_emoticon_very_sad_off)
                statusEmoticonSad = false
                emoticonSadImage.setBackgroundResource(R.drawable.ic_emoticon_sad_off)
                statusEmoticonNeutral = false
                emoticonNeutralImage.setBackgroundResource(R.drawable.ic_emoticon_neutral_off)
                statusEmoticonHappy = false
                emoticonHappyImage.setBackgroundResource(R.drawable.ic_emoticon_happy_off)
                statusEmoticonVeryHappy = true
                emoticonVeryHappyImage.setBackgroundResource(R.drawable.ic_emoticon_very_happy_on)
            }
        }

        // Back button
        backButton.setOnClickListener {
            findNavController().popBackStack()
        }

        // Send button
        buttonSend.setOnClickListener {
            dateView.visibility = View.GONE
            enunciated.visibility = View.GONE
            horizontalLine.visibility = View.GONE
            emoticonContainer.visibility = View.GONE
            checklist.visibility = View.GONE
            imageComplete.visibility = View.VISIBLE
            textComplete.visibility = View.VISIBLE

            buttonSend.visibility = View.GONE
            buttonHome.visibility = View.VISIBLE
        }

        // Home button
        buttonHome.setOnClickListener {
            when (args.form.type) {
                // 0 - Daily
                "diaria" -> sendEmotionalDaily(selectedEmotion)
                // else - Weekly
                else -> sendEmotionalWeekly(selectedEmotion)
            }

            findNavController().popBackStack()
        }
    }
}

private fun sendEmotionalDaily(selection: Int) {
    val text = if (selection == 0) {
        "Selecione um emoticon"
    } else {
        "$selection"
    }
}

private fun sendEmotionalWeekly(selection: Int) {

}